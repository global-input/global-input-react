"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.basicGetURL = exports.decrypt = exports.encrypt = exports.generateRandomString = void 0;

var _cryptoJs = _interopRequireDefault(require("crypto-js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const generateRandomString = (length = 10) => {
  const randPassword = Array(length).fill("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz@Â£$&*:;").map(function (x) {
    const indexString = _cryptoJs.default.enc.Hex.stringify(_cryptoJs.default.lib.WordArray.random(1));

    const indexValue = parseInt(indexString, 16);
    return x[indexValue % x.length];
  }).join('');
  return randPassword;
};

exports.generateRandomString = generateRandomString;

const encrypt = (content, password) => escape(_cryptoJs.default.AES.encrypt(content, password).toString());

exports.encrypt = encrypt;

const decrypt = (content, password) => _cryptoJs.default.AES.decrypt(unescape(content), password).toString(_cryptoJs.default.enc.Utf8);

exports.decrypt = decrypt;

const basicGetURL = (url, onSuccess, onError) => {
  let request = new XMLHttpRequest();

  request.ontimeout = e => {
    console.warn(" socket-server-url-timeout ");
    onError();
  };

  request.onreadystatechange = e => {
    if (e) {
      let cache = [];
      console.log(' onreadystatechange-error-' + e + ' '); // console.log(JSON.stringify(e, (key, value) => {
      //       if (typeof value === 'object' && value != null) {
      //             if (cache.indexOf(value) != -1) {
      //                   return;
      //             }
      //             cache.push(value);
      //       }
      //       return value;
      // }));
    }

    if (request.readyState !== 4) {
      return;
    }

    if (request.status === 200) {
      onSuccess(JSON.parse(request.responseText));
    } else {
      onError();
    }
  };

  request.open('GET', url, true);
  request.send();
};

exports.basicGetURL = basicGetURL;